// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    //kotlin的版本号 更新版本时需要注意其他三方库未更新及时可能造成的影响
    //举例：https://stackoverflow.com/questions/67410992/upgrading-android-kotlin-version-to-1-5-0-throwing-error-message-on-build
    ext.kotlin_version = '1.8.10'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        mavenCentral()
        maven { url 'https://jitpack.io' }
        google()

        //自己参考别人写的插件的地址
        maven {
            url = uri('./repo')
        }
        //自定义插件的maven 地址的
        maven {
            url uri('./lxnplugin/my-plugin')
        }


    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.4.2"
        // 使用 kotlin的Gradle插件   作用是提供编译 Kotlin 源文件（.kt 编译成 .class）的脚本，由 JetBrains 开发。
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //aspect 插件
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
        // aspectj  修复版本但也有问题
//        classpath 'io.github.wurensen:gradle-android-plugin-aspectjx:2.0.11'

        classpath 'com.google.gms:google-services:4.3.15'
        // Add the dependency for the Crashlytics Gradle plugin
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.4'
        // firebase 性能监控插件的
        classpath 'com.google.firebase:perf-plugin:1.4.2'

        //引入自定义插件的
        classpath 'com.lu.plugin:lxnplugin:0.0.3'

        //自定义的处理 exported 的插件
        classpath 'com.lxn1:exportedOk:1.1.4'
        classpath 'com.lxn:resourceOK:1.0.5'
    }
}

allprojects {
    //本质上都是方法调用
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }

        maven { url "https://frontjs-static.pgyer.com/dist/sdk/pgyersdk" }  //主力仓库
        maven { url "https://raw.githubusercontent.com/Pgyer/analytics/master" }  //备用仓库（主力仓库下载不下来使用）
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 写的这个task任务会在  右侧other组中hello
 * 其中 "hello" 是任务名, doLast 是在任务的最后执行
 */
tasks.register("hello"){
    doLast {
        println 'Hello world自己写的看看位置在啥地方!'
    }
}
